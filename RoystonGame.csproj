<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <ProjectDir>bin\$(Configuration)\$(TargetFramework)\</ProjectDir>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <LangVersion>8.0</LangVersion>
    <ApplicationInsightsResourceId>/subscriptions/7704f82a-fc3d-4692-a493-61ac7588aab8/resourcegroups/Default-ApplicationInsights-EastUS/providers/microsoft.insights/components/RoystonGame</ApplicationInsightsResourceId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.14.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.4" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.4" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="3.1.5" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.1.4" />
    <PackageReference Include="Microsoft.Identity.Web" Version="0.2.1-preview" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.3" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="TV\DataModels\States\GameStates\GameStateResultObjects\**" />
    <Compile Remove="UnityProject\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="TV\DataModels\States\GameStates\GameStateResultObjects\**" />
    <Content Remove="UnityProject\**" />
    <EmbeddedResource Remove="TV\DataModels\States\GameStates\GameStateResultObjects\**" />
    <EmbeddedResource Remove="UnityProject\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="TV\DataModels\States\GameStates\GameStateResultObjects\**" />
    <None Remove="UnityProject\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\lobby-management\lobby-management.component.ts" />
    <None Remove="WordLists\nouns.txt" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\angular.json" />
    <Content Include="ClientApp\package-lock.json" />
    <Content Include="ClientApp\package.json" />
    <Content Include="ClientApp\src\tsconfig.app.json" />
    <Content Include="ClientApp\src\tsconfig.server.json" />
    <Content Include="ClientApp\src\tsconfig.spec.json" />
    <Content Include="ClientApp\src\tslint.json" />
    <Content Include="ClientApp\tsconfig.json" />
    <Content Include="ClientApp\tslint.json" />
    <Content Include="WordLists\nouns.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\lobby-management\lobby-management.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\user-management\user-management.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
