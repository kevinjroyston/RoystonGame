using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static class TweenAnimator
{
    #region AutoGenerated LeanTween Overrides
    public static TweenAnimation descr(int uniqueId)
    {
        return new TweenAnimation(LeanTween.descr(uniqueId));
    }
    public static TweenAnimation description(int uniqueId)
    {
        return new TweenAnimation(LeanTween.description(uniqueId));
    }
    public static TweenAnimation options()
    {
        return new TweenAnimation(LeanTween.options());
    }
    public static TweenAnimation alpha(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.alpha(gameObject, to, time));
    }
    public static TweenAnimation alpha(LTRect ltRect, float to, float time)
    {
        return new TweenAnimation(LeanTween.alpha(ltRect, to, time));
    }
    public static TweenAnimation textAlpha(RectTransform rectTransform, float to, float time)
    {
        return new TweenAnimation(LeanTween.textAlpha(rectTransform, to, time));
    }
    public static TweenAnimation alphaText(RectTransform rectTransform, float to, float time)
    {
        return new TweenAnimation(LeanTween.alphaText(rectTransform, to, time));
    }
    public static TweenAnimation alphaCanvas(CanvasGroup canvasGroup, float to, float time)
    {
        return new TweenAnimation(LeanTween.alphaCanvas(canvasGroup, to, time));
    }
    public static TweenAnimation alphaVertex(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.alphaVertex(gameObject, to, time));
    }
    public static TweenAnimation color(GameObject gameObject, Color to, float time)
    {
        return new TweenAnimation(LeanTween.color(gameObject, to, time));
    }
    public static TweenAnimation textColor(RectTransform rectTransform, Color to, float time)
    {
        return new TweenAnimation(LeanTween.textColor(rectTransform, to, time));
    }
    public static TweenAnimation colorText(RectTransform rectTransform, Color to, float time)
    {
        return new TweenAnimation(LeanTween.colorText(rectTransform, to, time));
    }
    public static TweenAnimation delayedCall(float delayTime, Action callback)
    {
        return new TweenAnimation(LeanTween.delayedCall(delayTime, callback));
    }
    public static TweenAnimation delayedCall(GameObject gameObject, float delayTime, Action callback)
    {
        return new TweenAnimation(LeanTween.delayedCall(gameObject, delayTime, callback));
    }
    public static TweenAnimation destroyAfter(LTRect rect, float delayTime)
    {
        return new TweenAnimation(LeanTween.destroyAfter(rect, delayTime));
    }
    public static TweenAnimation move(GameObject gameObject, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation move(GameObject gameObject, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation move(GameObject gameObject, LTBezierPath to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation move(GameObject gameObject, LTSpline to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation moveSpline(GameObject gameObject, LTSpline to, float time)
    {
        return new TweenAnimation(LeanTween.moveSpline(gameObject, to, time));
    }
    public static TweenAnimation move(LTRect ltRect, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.move(ltRect, to, time));
    }
    public static TweenAnimation moveMargin(LTRect ltRect, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.moveMargin(ltRect, to, time));
    }
    public static TweenAnimation moveX(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveX(gameObject, to, time));
    }
    public static TweenAnimation moveY(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveY(gameObject, to, time));
    }
    public static TweenAnimation moveZ(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveZ(gameObject, to, time));
    }
    public static TweenAnimation moveLocal(GameObject gameObject, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocal(gameObject, to, time));
    }
    public static TweenAnimation moveLocalX(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocalX(gameObject, to, time));
    }
    public static TweenAnimation moveLocalY(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocalY(gameObject, to, time));
    }
    public static TweenAnimation moveLocalZ(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocalZ(gameObject, to, time));
    }
    public static TweenAnimation moveLocal(GameObject gameObject, LTBezierPath to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocal(gameObject, to, time));
    }
    public static TweenAnimation moveLocal(GameObject gameObject, LTSpline to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocal(gameObject, to, time));
    }
    public static TweenAnimation move(GameObject gameObject, Transform to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation rotate(GameObject gameObject, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.rotate(gameObject, to, time));
    }
    public static TweenAnimation rotate(LTRect ltRect, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotate(ltRect, to, time));
    }
    public static TweenAnimation rotateLocal(GameObject gameObject, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.rotateLocal(gameObject, to, time));
    }
    public static TweenAnimation rotateX(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotateX(gameObject, to, time));
    }
    public static TweenAnimation rotateY(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotateY(gameObject, to, time));
    }
    public static TweenAnimation rotateZ(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotateZ(gameObject, to, time));
    }
    public static TweenAnimation rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
    {
        return new TweenAnimation(LeanTween.rotateAround(gameObject, axis, add, time));
    }
    public static TweenAnimation rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
    {
        return new TweenAnimation(LeanTween.rotateAroundLocal(gameObject, axis, add, time));
    }
    public static TweenAnimation scale(GameObject gameObject, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.scale(gameObject, to, time));
    }
    public static TweenAnimation scale(LTRect ltRect, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.scale(ltRect, to, time));
    }
    public static TweenAnimation scaleX(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.scaleX(gameObject, to, time));
    }
    public static TweenAnimation scaleY(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.scaleY(gameObject, to, time));
    }
    public static TweenAnimation scaleZ(GameObject gameObject, float to, float time)
    {
        return new TweenAnimation(LeanTween.scaleZ(gameObject, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, float from, float to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, from, to, time));
    }
    public static TweenAnimation value(float from, float to, float time)
    {
        return new TweenAnimation(LeanTween.value(from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Vector2 from, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Vector3 from, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Color from, Color to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, from, to, time));
    }
    public static TweenAnimation delayedSound(AudioClip audio, Vector3 pos, float volume)
    {
        return new TweenAnimation(LeanTween.delayedSound(audio, pos, volume));
    }
    public static TweenAnimation delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
    {
        return new TweenAnimation(LeanTween.delayedSound(gameObject, audio, pos, volume));
    }
    public static TweenAnimation move(RectTransform rectTrans, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.move(rectTrans, to, time));
    }
    public static TweenAnimation moveX(RectTransform rectTrans, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveX(rectTrans, to, time));
    }
    public static TweenAnimation moveY(RectTransform rectTrans, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveY(rectTrans, to, time));
    }
    public static TweenAnimation moveZ(RectTransform rectTrans, float to, float time)
    {
        return new TweenAnimation(LeanTween.moveZ(rectTrans, to, time));
    }
    public static TweenAnimation rotate(RectTransform rectTrans, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotate(rectTrans, to, time));
    }
    public static TweenAnimation rotate(RectTransform rectTrans, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.rotate(rectTrans, to, time));
    }
    public static TweenAnimation rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotateAround(rectTrans, axis, to, time));
    }
    public static TweenAnimation rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
    {
        return new TweenAnimation(LeanTween.rotateAroundLocal(rectTrans, axis, to, time));
    }
    public static TweenAnimation scale(RectTransform rectTrans, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.scale(rectTrans, to, time));
    }
    public static TweenAnimation size(RectTransform rectTrans, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.size(rectTrans, to, time));
    }
    public static TweenAnimation alpha(RectTransform rectTrans, float to, float time)
    {
        return new TweenAnimation(LeanTween.alpha(rectTrans, to, time));
    }
    public static TweenAnimation color(RectTransform rectTrans, Color to, float time)
    {
        return new TweenAnimation(LeanTween.color(rectTrans, to, time));
    }
    public static TweenAnimation delayedCall(float delayTime, Action<object> callback)
    {
        return new TweenAnimation(LeanTween.delayedCall(delayTime, callback));
    }
    public static TweenAnimation delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
    {
        return new TweenAnimation(LeanTween.delayedCall(gameObject, delayTime, callback));
    }
    public static TweenAnimation move(GameObject gameObject, Vector3[] to, float time)
    {
        return new TweenAnimation(LeanTween.move(gameObject, to, time));
    }
    public static TweenAnimation moveSpline(GameObject gameObject, Vector3[] to, float time)
    {
        return new TweenAnimation(LeanTween.moveSpline(gameObject, to, time));
    }
    public static TweenAnimation moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
    {
        return new TweenAnimation(LeanTween.moveSplineLocal(gameObject, to, time));
    }
    public static TweenAnimation moveLocal(GameObject gameObject, Vector3[] to, float time)
    {
        return new TweenAnimation(LeanTween.moveLocal(gameObject, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdateRatio, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    public static TweenAnimation value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
    {
        return new TweenAnimation(LeanTween.value(gameObject, callOnUpdate, from, to, time));
    }
    #endregion
}
