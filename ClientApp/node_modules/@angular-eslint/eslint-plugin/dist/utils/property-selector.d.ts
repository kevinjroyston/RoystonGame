import { TSESTree } from '@typescript-eslint/experimental-utils';
import { SelectorStyle } from './utils';
export declare const OPTION_TYPE_ATTRIBUTE = "attribute";
export declare const OPTION_TYPE_ATTRS = "attrs";
export declare const OPTION_TYPE_ELEMENT = "element";
export declare type SelectorStyleOption = SelectorStyle | string;
export declare type SelectorTypeOption = typeof OPTION_TYPE_ATTRIBUTE | typeof OPTION_TYPE_ELEMENT | string;
export declare type SelectorTypeInternal = typeof OPTION_TYPE_ATTRS | typeof OPTION_TYPE_ELEMENT;
export declare type Options = [{
    type: SelectorTypeOption | Array<SelectorTypeOption>;
    prefix: string | Array<string>;
    style: SelectorTypeOption;
}];
export declare const reportPrefixError: (node: TSESTree.Expression, prefix: string | string[], context: any) => void;
export declare const reportStyleError: (node: TSESTree.Expression, style: string, context: any) => void;
export declare const reportTypeError: (node: TSESTree.Expression, type: string | string[], context: any) => void;
export declare const checkValidOptions: (type: string | string[], prefix: string | string[], style: string) => boolean;
export declare const checkSelector: (node: TSESTree.Expression, type: string | string[], prefixOption: string[], styleOption: SelectorStyle) => {
    hasExpectedPrefix: boolean | null;
    hasExpectedType: boolean;
    hasExpectedStyle: boolean;
} | null;
