import { UserAgentApplication, Configuration, AuthenticationParameters, AuthResponse, authResponseCallback, errorReceivedCallback, tokenReceivedCallback } from "msal";
import { Router } from "@angular/router";
import { BroadcastService } from "./broadcast.service";
import { MsalAngularConfiguration } from "./msal-angular.configuration";
import * as ɵngcc0 from '@angular/core';
export declare class MsalService extends UserAgentApplication {
    private msalConfig;
    private msalAngularConfig;
    private router;
    private broadcastService;
    constructor(msalConfig: Configuration, msalAngularConfig: MsalAngularConfiguration, router: Router, broadcastService: BroadcastService);
    private isUnprotectedResource;
    private isEmpty;
    loginPopup(request?: AuthenticationParameters): Promise<any>;
    ssoSilent(request: AuthenticationParameters): Promise<AuthResponse>;
    acquireTokenSilent(request: AuthenticationParameters): Promise<AuthResponse>;
    acquireTokenPopup(request: AuthenticationParameters): Promise<AuthResponse>;
    handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback): void;
    handleRedirectCallback(authCallback: authResponseCallback): void;
    clearCacheForScope(accessToken: string): void;
    getScopesForEndpoint(endpoint: string): Array<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MsalService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MsalService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXNhbC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm1zYWwuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVzZXJBZ2VudEFwcGxpY2F0aW9uLCBDb25maWd1cmF0aW9uLCBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnMsIEF1dGhSZXNwb25zZSwgYXV0aFJlc3BvbnNlQ2FsbGJhY2ssIGVycm9yUmVjZWl2ZWRDYWxsYmFjaywgdG9rZW5SZWNlaXZlZENhbGxiYWNrIH0gZnJvbSBcIm1zYWxcIjtcclxuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xyXG5pbXBvcnQgeyBCcm9hZGNhc3RTZXJ2aWNlIH0gZnJvbSBcIi4vYnJvYWRjYXN0LnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgTXNhbEFuZ3VsYXJDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vbXNhbC1hbmd1bGFyLmNvbmZpZ3VyYXRpb25cIjtcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTXNhbFNlcnZpY2UgZXh0ZW5kcyBVc2VyQWdlbnRBcHBsaWNhdGlvbiB7XHJcbiAgICBwcml2YXRlIG1zYWxDb25maWc7XHJcbiAgICBwcml2YXRlIG1zYWxBbmd1bGFyQ29uZmlnO1xyXG4gICAgcHJpdmF0ZSByb3V0ZXI7XHJcbiAgICBwcml2YXRlIGJyb2FkY2FzdFNlcnZpY2U7XHJcbiAgICBjb25zdHJ1Y3Rvcihtc2FsQ29uZmlnOiBDb25maWd1cmF0aW9uLCBtc2FsQW5ndWxhckNvbmZpZzogTXNhbEFuZ3VsYXJDb25maWd1cmF0aW9uLCByb3V0ZXI6IFJvdXRlciwgYnJvYWRjYXN0U2VydmljZTogQnJvYWRjYXN0U2VydmljZSk7XHJcbiAgICBwcml2YXRlIGlzVW5wcm90ZWN0ZWRSZXNvdXJjZTtcclxuICAgIHByaXZhdGUgaXNFbXB0eTtcclxuICAgIGxvZ2luUG9wdXAocmVxdWVzdD86IEF1dGhlbnRpY2F0aW9uUGFyYW1ldGVycyk6IFByb21pc2U8YW55PjtcclxuICAgIHNzb1NpbGVudChyZXF1ZXN0OiBBdXRoZW50aWNhdGlvblBhcmFtZXRlcnMpOiBQcm9taXNlPEF1dGhSZXNwb25zZT47XHJcbiAgICBhY3F1aXJlVG9rZW5TaWxlbnQocmVxdWVzdDogQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzKTogUHJvbWlzZTxBdXRoUmVzcG9uc2U+O1xyXG4gICAgYWNxdWlyZVRva2VuUG9wdXAocmVxdWVzdDogQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzKTogUHJvbWlzZTxBdXRoUmVzcG9uc2U+O1xyXG4gICAgaGFuZGxlUmVkaXJlY3RDYWxsYmFjayh0b2tlblJlY2VpdmVkQ2FsbGJhY2s6IHRva2VuUmVjZWl2ZWRDYWxsYmFjaywgZXJyb3JSZWNlaXZlZENhbGxiYWNrOiBlcnJvclJlY2VpdmVkQ2FsbGJhY2spOiB2b2lkO1xyXG4gICAgaGFuZGxlUmVkaXJlY3RDYWxsYmFjayhhdXRoQ2FsbGJhY2s6IGF1dGhSZXNwb25zZUNhbGxiYWNrKTogdm9pZDtcclxuICAgIGNsZWFyQ2FjaGVGb3JTY29wZShhY2Nlc3NUb2tlbjogc3RyaW5nKTogdm9pZDtcclxuICAgIGdldFNjb3Blc0ZvckVuZHBvaW50KGVuZHBvaW50OiBzdHJpbmcpOiBBcnJheTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==